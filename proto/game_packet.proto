syntax = "proto3";

// Enum for the GameState
enum GameState {
    SET_UP = 0;
    PRE_FLOP = 1;
    POST_FLOP = 2;
    POST_TURN = 3;
    POST_RIVER = 4;
    POST_HAND = 5;
    SHOWDOWN = 6;
}

enum PlayerAction {
    CHECK_CALL = 0;
    RAISE = 1;
    FOLD = 2;
}

enum Suit {
    SPADE = 0;
    HEART = 1;
    CLUB = 2;
    DIAMOND = 3;
    INVALID = 4;
}

message Card {
    int32 rank = 1;      // Card rank (2 to 14, Ace = 14)
    Suit suit = 2;       // Card suit (SPADE, HEART, CLUB, DIAMOND, INVALID)
}

enum HandRank {
    HIGH_CARD = 0;
    PAIR = 1;
    TWO_PAIR = 2;
    TRIPS = 3;
    STRAIGHT = 4;
    FLUSH = 5;
    FULL_HOUSE = 6;
    QUADS = 7;
    STRAIGHT_FLUSH = 8;
}

// Message for PlayerDecision (sent by the client to the server)
message PlayerDecision {
    int32 player_id = 1;          // Player ID
    PlayerAction player_action = 2;      // Player action (CHECK_CALL, RAISE, FOLD)
    int32 bet_size = 3;           // Bet size (0 for check or fold, >0 for raise)
}

message PlayerStack {
    string player_name = 1;
    int32 stack_size = 2;
}

message PlayerStackUpdate {
    repeated PlayerStack players = 1;
}

message PlayerActionUpdate {
    int32 player_id = 1;
    string player_name = 2;
    PlayerAction player_action = 3;
    int32 pot_size = 4;
    bool has_action = 5;
}

message DealerUpdate {
    GameState game_state = 1;
    repeated Card community_cards = 2;
}

message HoleCards {
    Card first = 1;
    Card second = 2;
}

message HandResult {
    repeated int32 winners = 1;
    repeated HoleCards player_hands = 2;
    HandRank hand_rank = 3;
    int32 pot_size = 4;
}

// Message for GamePacket (sent by the server to the client)
message GamePacket {
    oneof payload {
        PlayerStackUpdate stack_update = 1;
        PlayerActionUpdate action_update = 2;
        DealerUpdate dealer_update = 3;
        HandResult hand_result = 4;
    }
}